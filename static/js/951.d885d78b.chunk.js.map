{"version":3,"file":"static/js/951.d885d78b.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Field, Form } from 'formik';\n\nexport const SectionPage = styled.section`\ndisplay: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 30px;\n  margin: 30px auto;\n  padding: 10px;\n  background-color: rgba(14, 82, 91, 0.04);\n  border-radius: 20px;\n  box-shadow: 0 0 20px rgb(14, 82, 91);\n  width: 270px;\n  \n  @media screen and (min-width: 480px){\n    margin: 40px auto;\n    gap: 40px;\n    padding: 20px;\n    width: 350px;\n\n   }\n   @media screen and (min-width: 768px){\n    margin: 80px auto;\n    padding: 40px;\n    gap: 40px;\n   }\n  `\nexport const ContactsTitle = styled.h1`\nfont-size:16px;\n@media screen and (min-width: 480px){font-size:18px;}\n@media screen and (min-width: 768px){font-size:32px;}`\n\nexport const FormField = styled(Form)`\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n\n\n@media screen and (min-width: 480px){gap: 30px;}\n@media screen and (min-width: 768px){gap: 40px;}`\n\n\nexport const Input = styled(Field)`\n  padding: 5px 15px;\n  width: 240px;\n  font-size: 12px;\n  background-color: rgba(26, 127, 141, 0.5);\n  border-radius: 10px;\n  box-shadow: 0 0 5px rgb(14, 82, 91);\n  border: none;\n  color: rgb(238, 234, 234);\n  margin-top:10px;\n\n  @media screen and (min-width: 480px){\n    width: 270px;\n    font-size: 16px};\n  @media screen and (min-width: 768px){\n    margin-top:0px;\n    width: 200px;\n    font-size: 16px}\n`\n\nexport const FormLabel = styled.label`\n  font-size: 12px;\n  font-weight: 500;\n   \n  @media screen and (min-width: 480px)\n  {\n       font-size: 16px;}\n   @media screen and (min-width: 768px) {display: flex;\n  justify-content: space-between;\n  align-items: center; \n  gap: 10px;\n    font-size: 18px;\n  }\n`;\n\nexport const LabelWrap = styled.div`\ndisplay: flex;\nalign-items: end;\ngap: 5px;`\n\nexport const FormButton = styled.button`\ndisplay: flex;\ngap: 10px;\nalign-items:center;\njustify-content:center;\nmargin: 0  auto;\n  cursor: pointer;\n  padding: 5px 10px;\n  width: 150px;\n  font-size: 12px;\n  font-weight: 600;\n  color: inherit;\n  border: none;\n  border-radius: 10px;\n  background-color: rgb(26, 127, 141);\n  box-shadow: 0 0 7px rgb(26, 127, 141);\n  transition: background-color 0.3s ease, box-shadow 0.3s ease;\n  transition: background-color 0.3s ease, box-shadow 0.3s ease;\n  :hover {\n    background-color: transparent;\n    box-shadow: 0 0 10px rgb(14, 82, 91);\n  }\n\n  @media screen and (min-width: 480px){gap: 20px; width: 250px;font-size: 16px;padding: 5px 10px;}\n`;","import React, { useState } from 'react';\nimport { ErrorMessage, Formik } from 'formik';\n\nimport {\n  MdPermContactCalendar,\n  MdPersonAddAlt,\n  MdStayCurrentPortrait,\n} from 'react-icons/md';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/selectors';\nimport { createContactsThunk} from '../../redux/operations';\nimport { FormButton, FormField, FormLabel, Input, LabelWrap } from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '+380',\n};\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleInputChange = ({ target }) => {\n    if (target.name === 'name') {\n      setName(target.value);\n    }\n    if (target.name === 'number') {\n      setNumber(target.value);\n    }\n    return;\n  };\n\n\n  const handleSubmit = (values, actions) => {\n    const contactData = { name, number };\n   \n\n    const isInContacts = contacts.some(\n      ({ name, number }) =>\n        name.toLowerCase() === contactData.name.toLowerCase() ||\n        number.toLowerCase() === contactData.number.toLowerCase()\n    );\n\n    if (isInContacts) {\n      alert(`The contact is already in contacts`);\n      return;\n    }\n    dispatch(createContactsThunk(contactData));\n    setName('');\n    setNumber('');\n    actions.resetForm();\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      <FormField>\n          <FormLabel>\n          <LabelWrap>\n            <MdPermContactCalendar />\n            <span> Name:</span>\n          </LabelWrap>\n          <Input\n            onChange={handleInputChange}\n            value={name}\n            placeholder='Enter name'\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"The title can only contain letters, apostrophes, hyphens, and spaces.\"\n            name=\"name\"\n            type=\"text\"\n            required\n          />\n          <ErrorMessage name=\"name\" />\n        </FormLabel>\n        <FormLabel>\n          <LabelWrap>\n            <MdStayCurrentPortrait />\n            <span> Number:</span>\n          </LabelWrap>\n          <Input\n            onChange={handleInputChange}\n            value={number}\n            placeholder='Enter phone number'\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          <ErrorMessage name=\"number\" />\n        </FormLabel>\n        <FormButton type=\"submit\" className=\"form-btn\">\n          {' '}\n          <MdPersonAddAlt size=\"24px\" />\n          <p>Add contact</p>\n        </FormButton>\n      </FormField>\n    </Formik>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 250px;\n  padding: 12px;\n  border-radius: 4px;\n  background-color: transparent;\n  box-shadow: 0 0 5px rgb(14, 82, 91);\n  border: none;\n  list-style: none;\n  @media screen and (min-width: 480px){ width: 320px;font-size: 16px;}\n  @media screen and (min-width: 768px){ width: 360px;font-size: 16px;}\n`;\n\nexport const Item = styled.li`\n  border-radius: 4px;\n  background-color: transparent;\n  box-shadow: 0 0 5px rgb(14, 82, 91);\n  padding: 10px;\n  margin-bottom: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 12px;\n  transition: background-color 0.3s ease, scale 0.3s ease;\n  :hover {\n    background-color: rgb(14, 82, 91);\n    scale: 1.05;\n  }\n  @media screen and (min-width: 480px){ font-size: 16px;}\n \n`;\n\nexport const Button = styled.button`\n  padding: 4px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 4px;\n  background-color: rgb(238, 234, 234);\n  box-shadow: 0 0 5px rgb(14, 82, 91);\n  border: none;\n  transition: font-weight 0.3s ease;\n  :hover {\n    font-weight: 600;\n  }\n`;\n\nexport const Text = styled.p`\nfont-size:20px;\ntext-align: center;\n`\n","import styled from '@emotion/styled';\n\nexport const StyledLoader = styled.div`\n  margin: 0 auto;\n`;\n","import { MagnifyingGlass } from 'react-loader-spinner';\nimport { StyledLoader } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <StyledLoader>\n      <MagnifyingGlass\n  visible={true}\n  height=\"80\"\n  width=\"80\"\n  ariaLabel=\"MagnifyingGlass-loading\"\n  wrapperStyle={{}}\n  wrapperClass=\"MagnifyingGlass-wrapper\"\n  glassColor = 'transparent'\n  color = 'rgb(26, 127, 141)'\n/>\n    </StyledLoader>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { List, Item, Button, Text } from './ContactList.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError, selectFilter, selectLoading } from '../../redux/selectors';\nimport { deleteContactsThunk, getContactsThunk } from '../../redux/operations';\nimport { Loader } from 'components/Loader/Loader';\n\n\n// Компонент списка контактов\nconst ContactList = () => {\n \n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError)\n\n  useEffect(()=>{\n    dispatch(getContactsThunk())},[dispatch])\n\n  const onRemoveContact = contactId => {\n    dispatch(deleteContactsThunk(contactId));\n  };\n\n  const normalizedFilter = filter.toLowerCase();\n  const filteredContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter)\n  );\n\n  \n  return (\n    <div>\n      <List>\n      {isLoading && !error ? (\n        <Loader />\n      ) : contacts.length === 0 && !error ? (\n        <Text>The Phonebook is empty. Add your first contact.</Text>\n      ) : \n       filteredContacts.length === 0 && !error ? (\n        <Text>Not find</Text>\n      ):\n        (filteredContacts.map(contact => (\n          <Item key={contact.id}>\n            {contact.name + ' : ' + contact.number}\n            {\n      \n              <Button\n                type=\"button\"\n                name=\"delete\"\n                onClick={() => onRemoveContact(contact.id)}\n              >\n                delete\n              </Button>\n            }\n          </Item>\n        )))}\n      </List>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from '@emotion/styled';\n\nexport const InputFind = styled.input`\n  padding: 10px 20px;\n  width: 230px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: rgba(26, 127, 141, 0.5);\n  border-radius: 10px;\n  box-shadow: 0 0 5px rgb(14, 82, 91);\n  border: none;\n  color: rgb(238, 234, 234);\n\n  @media screen and (min-width: 480px){ width: 260px;font-size: 16px;}\n  @media screen and (min-width: 768px){ width: 340px;font-size: 16px;}\n  `;\n\nexport const FindText = styled.p`\n  font-size: 14px;\n\n  @media screen and (min-width: 480px){font-size: 16px;}\n \n`;\n","import { FindText, InputFind } from './Filter.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from '../../redux/selectors';\nimport { setFilter } from '../../redux/reducers/filterSlice';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  const onFilterChange = event => {\n    dispatch(setFilter(event.target.value));\n  };\n\n  return (\n    <>\n      <FindText>Find contacts by name</FindText>\n\n      <InputFind\n        type=\"text\"\n        name=\"filter\"\n        placeholder='Serch by name'\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={filter}\n        onChange={onFilterChange}\n      />\n    </>\n  );\n};\n","import { Container } from 'components/App/App.styled'\nimport { ContactForm } from 'components/ContactForm/ContactForm'\nimport { ContactsTitle, SectionPage } from 'components/ContactForm/ContactForm.styled'\nimport ContactList from 'components/ContactList/ContactList'\nimport { Filter } from 'components/Filter/Filter'\nimport React from 'react'\n\nconst Contacts = () => {\n  return (\n    <Container>\n        <SectionPage>\n        <ContactsTitle> My contacts</ContactsTitle>\n        <ContactForm/>\n        <Filter/>\n       <ContactList/>\n       </SectionPage>\n    </Container>)}\n\n\n\nexport default Contacts\n"],"names":["SectionPage","styled","_templateObject","_taggedTemplateLiteral","ContactsTitle","_templateObject2","FormField","Form","_templateObject3","Input","Field","_templateObject4","FormLabel","_templateObject5","LabelWrap","_templateObject6","FormButton","_templateObject7","initialValues","name","number","ContactForm","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","contacts","useSelector","selectContacts","dispatch","useDispatch","handleInputChange","_ref","target","value","_jsx","Formik","onSubmit","values","actions","contactData","isInContacts","some","_ref2","toLowerCase","alert","createContactsThunk","resetForm","children","_jsxs","MdPermContactCalendar","onChange","placeholder","pattern","title","type","required","ErrorMessage","MdStayCurrentPortrait","className","MdPersonAddAlt","size","List","Item","Button","Text","StyledLoader","Loader","MagnifyingGlass","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","glassColor","color","filter","selectFilter","isLoading","selectLoading","error","selectError","useEffect","getContactsThunk","normalizedFilter","filteredContacts","contact","includes","length","map","onClick","contactId","id","deleteContactsThunk","InputFind","FindText","Filter","_Fragment","event","setFilter","Container","ContactList"],"sourceRoot":""}